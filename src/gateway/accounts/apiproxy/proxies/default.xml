<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
 Copyright 2017 Google Inc.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 https://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<ProxyEndpoint name="default">
    <Description/>
    <FaultRules/>
    <Flows>
        <Flow name="GetAccountBalances">
            <Description/>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Get-Account-resource</Name>
                </Step>
                <Step>
                    <Condition>isError = true</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Invalid-Request</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Create-Balance-Response</Name>
                </Step>
            </Response>
            <Condition>((proxy.pathsuffix MatchesPath "/balances") or (proxy.pathsuffix MatchesPath "/accounts/{AccountId}/balances")) and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetAccountTransactions">
            <Description/>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Get-Transactions-Request</Name>
                </Step>
                <Step>
                    <Condition>isError = true</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Invalid-Request</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Create-Transactions-Response</Name>
                </Step>
            </Response>
            <Condition>((proxy.pathsuffix MatchesPath "/transactions") or (proxy.pathsuffix MatchesPath "/accounts/{AccountId}/transactions")) and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetAccountBeneficiaries">
            <Description/>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Get-Account-resource</Name>
                </Step>
                <Step>
                    <Condition>isError = true</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Invalid-Request</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Create-Beneficiaries-Response</Name>
                </Step>
            </Response>
            <Condition>((proxy.pathsuffix MatchesPath "/beneficiaries") or (proxy.pathsuffix MatchesPath "/accounts/{AccountId}/beneficiaries")) and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetAccountDirectDebits">
            <Description/>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Get-Account-resource</Name>
                </Step>
                <Step>
                    <Condition>isError = true</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Invalid-Request</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Create-DirectDebits-Response</Name>
                </Step>
            </Response>
            <Condition>((proxy.pathsuffix MatchesPath "/direct-debits") or (proxy.pathsuffix MatchesPath "/accounts/{AccountId}/direct-debits")) and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetAccountStandingOrders">
            <Description/>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Get-Account-resource</Name>
                </Step>
                <Step>
                    <Condition>isError = true</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Invalid-Request</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Create-StandingOrders-Response</Name>
                </Step>
            </Response>
            <Condition>((proxy.pathsuffix MatchesPath "/standing-orders") or (proxy.pathsuffix MatchesPath "/accounts/{AccountId}/standing-orders")) and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetAccountProducts">
            <Description/>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Get-Account-resource</Name>
                </Step>
                <Step>
                    <Condition>isError = true</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Invalid-Request</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Create-Products-Response</Name>
                </Step>
            </Response>
            <Condition>((proxy.pathsuffix MatchesPath "/accounts/{AccountId}/product")) and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetAccountRequest">
            <Description/>
            <Request>
                <Step>
                    <Condition>(accountRequestId = null) or (accountRequestId = "") </Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Missing-Request-Id</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Get-Account-resource</Name>
                </Step>
                <Step>
                    <Condition>isError = true</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Invalid-Request</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Assign-Acc-Req-Params</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/account-requests/{AccountRequestId}") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="DeleteAccountRequest">
            <Description/>
            <Request>
                <Step>
                    <Condition>(accountRequestId = null) or (accountRequestId = "")</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Missing-Request-Id</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Get-Account-resource</Name>
                </Step>
                <Step>
                    <Condition>isError = true</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Invalid-Request</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/account-requests/{AccountRequestId}") and (request.verb = "DELETE")</Condition>
        </Flow>
        <Flow name="CreateAccountRequest">
            <Description/>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Acc-Req-Perm</Name>
                </Step>
                <Step>
                    <Condition>isError = true</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Invalid-Perm-Array</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Post-Acc-Req</Name>
                </Step>
                <Step>
                    <Condition>isError = true</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Invalid-Request</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Validate-JWS</Name>
                </Step>
                <Step>
                    <Condition>(isJWSError = true)</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Invalid-Signature</Name>
                </Step>
                <Step>
                    <Name>Verify-JWT</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>Assign-Valid-Acc-Req-Payload</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/account-requests") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="GetAccountDetails">
            <Description/>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>Validate-Get-Account-resource</Name>
                </Step>
                <Step>
                    <Condition>isError = true</Condition>
                    <FaultRules/>
                    <Name>Raise-Fault-Invalid-Request</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>Create-Accounts-Response</Name>
                </Step>
            </Response>
            <Condition>((proxy.pathsuffix MatchesPath "/accounts") or (proxy.pathsuffix MatchesPath "/accounts/{AccountId}") ) and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="InvalidPath">
            <Description/>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>Raise-Fault-Invalid-Operation</Name>
                </Step>
            </Request>
            <Response/>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request>
            <Step>
                <Condition>doValidation = true</Condition>
                <FaultRules/>
                <Name>Fetch-Account-Consent</Name>
            </Step>
            <Step>
                <Condition>doValidation = true</Condition>
                <FaultRules/>
                <Name>ValidateReqWithConsentData</Name>
            </Step>
            <Step>
                <Condition>doValidation = true and isError = true</Condition>
                <FaultRules/>
                <Name>RaiseFaultInvalidAccess</Name>
            </Step>
            <Step>
                <Condition>doValidation = true</Condition>
                <FaultRules/>
                <Name>Get-Acc-Req-Data</Name>
            </Step>
            <Step>
                <Condition>doValidation = true</Condition>
                <FaultRules/>
                <Name>Validate-Req-with-Acc-Req-data</Name>
            </Step>
            <Step>
                <Condition>doValidation = true and isError = true</Condition>
                <FaultRules/>
                <Name>Raise-Fault-Invalid-Permissions</Name>
            </Step>
            <Step>
                <Condition>doValidation = true</Condition>
                <FaultRules/>
                <Name>Assign-Other-Params</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>Assign-APIKey-Header</Name>
            </Step>
        </Request>
        <Response>
            <Step>
                <Condition>doValidation = true and updateAccessCountPayload != null</Condition>
                <FaultRules/>
                <Name>Update-Access-Count</Name>
            </Step>
            <Step>
                <Condition>doValidation = true</Condition>
                <FaultRules/>
                <Name>Assign-Response-Headers</Name>
            </Step>
            <Step>
                <Condition>fapiInteractionId != null</Condition>
                <FaultRules/>
                <Name>Add-Interaction-Id-header</Name>
            </Step>
            <Step>
                <Condition>request.verb = "GET" or request.verb = "POST"</Condition>
                <FaultRules/>
                <Name>Extract-Private-Config</Name>
            </Step>
            <Step>
                <Condition>request.verb = "GET" or request.verb = "POST"</Condition>
                <FaultRules/>
                <Name>Create-JWS-Header</Name>
            </Step>
            <Step>
                <Name>Generate-JWT</Name>
            </Step>
            <Step>
                <Name>Create-Detached-JWS</Name>
            </Step>
            <Step>
                <Condition>request.verb = "GET" or request.verb = "POST"</Condition>
                <FaultRules/>
                <Name>Add-JWS-Header</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>Add-CORS</Name>
            </Step>
        </Response>
    </PostFlow>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Condition>request.verb = "OPTIONS"</Condition>
                <FaultRules/>
                <Name>Raise-Fault-OPTIONS</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>Verify-Access-Token</Name>
            </Step>
            <Step>
                <Condition>oauthV2.Verify-Access-Token.failed = true</Condition>
                <FaultRules/>
                <Name>RaiseFaultInvalidAccessToken</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>Extract-Access-Token</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>GetTokenAttributes</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>Quota-Client-Id</Name>
            </Step>
            <Step>
                <Condition>ratelimit.Quota-Client-Id.failed = true</Condition>
                <FaultRules/>
                <Name>Raise-Fault-Quota-Exceeded</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>Access-App-Attributes</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>Extract-App-Attributes</Name>
            </Step>
            <Step>
                <Condition>(request.header.Accept!=null) and !(request.header.Accept = "application/json" or request.header.Accept = "*/*")</Condition>
                <FaultRules/>
                <Name>Raise-Fault-Invalid-Accept-Header</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>Path-Verification</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>Assign-Token-Details</Name>
            </Step>
            <Step>
                <Condition>((doValidation = true and (tokenType != "accounts")) or (doValidation = false and ( tokenScope != "accounts")))</Condition>
                <FaultRules/>
                <Name>Raise-Fault-Invalid-Scope</Name>
            </Step>
            <Step>
                <Condition>doValidation = true and requestId = null</Condition>
                <FaultRules/>
                <Name>Raise-Fault-Account-Request-Id-Missing</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>ExtractRequestParams</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <HTTPProxyConnection>
        <BasePath>/ais/open-banking/v1.0.1</BasePath>
        <Properties/>
        <VirtualHost>default</VirtualHost>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="default">
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>